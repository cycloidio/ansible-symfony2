---
- name: Check for composer.phar
  stat: path={{symfony_composer_path}}
  register: composer_file
  become: yes
  become_user: "{{ deploy_user }}"

- name: Run composer self-update
  shell: "{{symfony_composer_path}} selfupdate --no-interaction"
  when: composer_file.stat.exists and symfony_composer_self_update
  register: composer_self_update_result
  changed_when: composer_self_update_result.stderr | search('Updating')
  become: yes
  become_user: "{{ deploy_user }}"

- name: Install composer
  get_url: url=https://getcomposer.org/composer.phar dest={{symfony_composer_path}} mode=0755 validate_certs=no force=no
  become: yes
  become_user: "{{ deploy_user }}"

- name: Run composer install | DEV
  shell: chdir={{ansistrano_release_path.stdout}}/{{symfony_deployment_subdir}}
    export SYMFONY_ENV=dev && {{symfony_php_path}} {{symfony_composer_path}} install {{symfony_composer_options}}
  register: composer_install_result
  changed_when: composer_install_result.stderr | search('- \w+ing ')
  become: yes
  become_user: "{{ deploy_user }}"
  when: "'dev' in symfony_env"

- name: Run composer install | PROD
  shell: chdir={{ansistrano_release_path.stdout}}/{{symfony_deployment_subdir}}
    export SYMFONY_ENV=prod && {{symfony_php_path}} {{symfony_composer_path}} install {{symfony_composer_options}}
  register: composer_install_result
  changed_when: composer_install_result.stderr | search('- \w+ing ')
  become: yes
  become_user: "{{ deploy_user }}"
  when: "'dev' not in symfony_env"
